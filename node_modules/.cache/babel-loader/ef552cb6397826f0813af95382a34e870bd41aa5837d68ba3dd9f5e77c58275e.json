{"ast":null,"code":"var _jsxFileName = \"/Users/nikaskeba/Documents/GitHub/AI_quiz_generator/src/QuizComponent.js\",\n  _s = $RefreshSig$();\n//QuizComponent.js\nimport React, { useState } from 'react';\nimport './QuizComponent.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [quizData, setQuizData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showAnswers, setShowAnswers] = useState(false); // New state variable\n  const [feedback, setFeedback] = useState({}); // New state to store feedback for each question\n  const [quizType, setQuizType] = useState('Subjunctive'); // New state for quiz type\n\n  const generateNewQuiz = async () => {\n    setLoading(true);\n\n    // Reset the feedback state\n    setFeedback({});\n\n    // Clear input boxes\n    for (let i = 0; i < 5; i++) {\n      // Assuming you know there are always 5 questions; adjust if variable\n      const inputElement = document.getElementById(`input-${i}`);\n      if (inputElement) {\n        inputElement.value = '';\n      }\n    }\n\n    // Determine the content based on the selected quiz type\n    let userContent;\n    if (quizType === 'Imperative') {\n      userContent = \"generate 5 complete spanish imperative sentences with the sentence verb unconjugated inside a () and the conjugated answer at the end in () for example '1.(venir) a la fiesta. (venga)'  output only sentences 1 to 5\";\n    } else if (quizType === 'Subjunctive') {\n      userContent = \"generate 5 complete spanish imperative sentences with the sentence verb unconjugated inside a () and the conjugated answer at the end in () for example '1. Es probable que Juan (venir) a la fiesta. (venga)'  output only sentences 1 to 5\";\n    } else if (quizType === 'Basic Conjugation') {\n      userContent = \"generate 5 basic spanish present tense sentences with the sentence verb unconjugated inside a () and the conjugated answer at the end in () for example '1. Juan (venir) a la fiesta. (viene)'  output only sentences 1 to 5\";\n    }\n    try {\n      const OPENAI_API_ENDPOINT = 'https://api.openai.com/v1/chat/completions';\n      const payload = {\n        model: \"gpt-3.5-turbo-0613\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": \"You are a Spanish teacher.\"\n        }, {\n          \"role\": \"user\",\n          \"content\": userContent\n        }],\n        max_tokens: 300\n      };\n      const response = await axios.post(OPENAI_API_ENDPOINT, payload, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer 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`\n        }\n      });\n      const data = response.data;\n      setQuizData(data);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching quiz data:\", error);\n      setLoading(false);\n    }\n  };\n  const checkAnswers = () => {\n    let newFeedback = {};\n    if (!quizData || !quizData.choices || !quizData.choices[0] || !quizData.choices[0].message) {\n      console.error(\"Invalid quiz data\");\n      return;\n    }\n\n    // Split based on the second occurrence of \"1.\"\n    let firstIndex = quizData.choices[0].message.content.indexOf('1.');\n    let secondIndex = quizData.choices[0].message.content.indexOf('1.', firstIndex + 1);\n    if (secondIndex === -1) {\n      console.error('Unexpected data format');\n      return;\n    }\n    const contentAfterSolutions = quizData.choices[0].message.content.substring(secondIndex);\n    const answers = contentAfterSolutions.split('\\n');\n    answers.forEach((answer, index) => {\n      let formattedAnswer = answer.replace(/^\\d+\\.\\s*/, '');\n      let inputElement = document.getElementById(`input-${index}`);\n      let userInput = inputElement ? inputElement.value : null;\n      if (userInput === formattedAnswer) {\n        newFeedback[index] = \"correct\";\n      } else {\n        newFeedback[index] = \"wrong\";\n      }\n    });\n    setFeedback(newFeedback);\n  };\n  const formatQuestions = data => {\n    let renderedQuestions = [];\n    if (data && data.choices && data.choices[0] && data.choices[0].message) {\n      let content = data.choices[0].message.content;\n\n      // Start from the first occurrence of \"1.\"\n      const startIndex = content.indexOf('1.');\n      if (startIndex > -1) {\n        content = content.substring(startIndex);\n      }\n      const questionAnswerPairs = content.split('\\n');\n      questionAnswerPairs.forEach((pair, index) => {\n        // Extract the question and answer from the pair using the updated regex pattern\n        let match = pattern.match(pair);\n        if (!match) return;\n        let [_, questionNumber, questionContent, answer] = match.groups();\n        let feedbackElement = null;\n        if (feedback[index]) {\n          feedbackElement = /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `feedback ${feedback[index]}`,\n            children: feedback[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 27\n          }, this);\n        }\n        let answerText = null;\n        if (showAnswers) {\n          answerText = /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"(\", answer, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 22\n          }, this);\n        }\n        renderedQuestions.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [questionNumber, \" \", questionContent, /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `input-${index}`,\n            placeholder: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), answerText, \" \", feedbackElement]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this));\n      });\n    }\n    return renderedQuestions;\n  };\n  const selectQuizType = type => {\n    setQuizType(type);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: quizType === 'Subjunctive' ? 'selected-quiz' : '',\n        onClick: () => selectQuizType('Subjunctive'),\n        children: \"Subjunctive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: quizType === 'Basic Conjugation' ? 'selected-quiz' : '',\n        onClick: () => selectQuizType('Basic Conjugation'),\n        children: \"Basic Conjugation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: quizType === 'Imperative' ? 'selected-quiz' : '',\n        onClick: () => selectQuizType('Imperative'),\n        children: \"Imperative\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateNewQuiz,\n      children: \"Generate New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswers,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAnswers(!showAnswers),\n      children: \"Show Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), formatQuestions(quizData), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 2\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }, this), quizData && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(quizData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"HkYRodNhu1KUNN2Of9kFEgpI3Dg=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QuizComponent","_s","quizData","setQuizData","loading","setLoading","showAnswers","setShowAnswers","feedback","setFeedback","quizType","setQuizType","generateNewQuiz","i","inputElement","document","getElementById","value","userContent","OPENAI_API_ENDPOINT","payload","model","messages","max_tokens","response","post","headers","data","error","console","checkAnswers","newFeedback","choices","message","firstIndex","content","indexOf","secondIndex","contentAfterSolutions","substring","answers","split","forEach","answer","index","formattedAnswer","replace","userInput","formatQuestions","renderedQuestions","startIndex","questionAnswerPairs","pair","match","pattern","_","questionNumber","questionContent","groups","feedbackElement","className","children","fileName","_jsxFileName","lineNumber","columnNumber","answerText","push","id","placeholder","selectQuizType","type","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/nikaskeba/Documents/GitHub/AI_quiz_generator/src/QuizComponent.js"],"sourcesContent":["//QuizComponent.js\nimport React, { useState } from 'react';\nimport './QuizComponent.css';\nimport axios from 'axios';\n\nconst QuizComponent = () => {\n  const [quizData, setQuizData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showAnswers, setShowAnswers] = useState(false);  // New state variable\n  const [feedback, setFeedback] = useState({}); // New state to store feedback for each question\n  const [quizType, setQuizType] = useState('Subjunctive'); // New state for quiz type\n\nconst generateNewQuiz = async () => {\n  setLoading(true);\n\n  // Reset the feedback state\n  setFeedback({});\n\n  // Clear input boxes\n  for (let i = 0; i < 5; i++) { // Assuming you know there are always 5 questions; adjust if variable\n    const inputElement = document.getElementById(`input-${i}`);\n    if (inputElement) {\n      inputElement.value = '';\n    }\n  }\n\n // Determine the content based on the selected quiz type\n    let userContent;\n      if (quizType === 'Imperative') {\n    userContent = \"generate 5 complete spanish imperative sentences with the sentence verb unconjugated inside a () and the conjugated answer at the end in () for example '1.(venir) a la fiesta. (venga)'  output only sentences 1 to 5\";\n} else if (quizType === 'Subjunctive') {\n    userContent = \"generate 5 complete spanish imperative sentences with the sentence verb unconjugated inside a () and the conjugated answer at the end in () for example '1. Es probable que Juan (venir) a la fiesta. (venga)'  output only sentences 1 to 5\";\n} else if (quizType === 'Basic Conjugation') {\n    userContent = \"generate 5 basic spanish present tense sentences with the sentence verb unconjugated inside a () and the conjugated answer at the end in () for example '1. Juan (venir) a la fiesta. (viene)'  output only sentences 1 to 5\";\n}\n\n    try {\nconst OPENAI_API_ENDPOINT = 'https://api.openai.com/v1/chat/completions';\nconst payload = {\n    model: \"gpt-3.5-turbo-0613\",\n    messages: [\n        { \"role\": \"system\", \"content\": \"You are a Spanish teacher.\" },\n        { \"role\": \"user\", \"content\": userContent }\n    ],\n    max_tokens: 300\n};\n\nconst response = await axios.post(OPENAI_API_ENDPOINT, payload, {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer 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`\n    }\n});\n\n\n      const data = response.data;\n\n      setQuizData(data);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching quiz data:\", error);\n      setLoading(false);\n    }\n  };\n\n\n\nconst checkAnswers = () => {\n  let newFeedback = {};\n\n  if (!quizData || !quizData.choices || !quizData.choices[0] || !quizData.choices[0].message) {\n    console.error(\"Invalid quiz data\");\n    return;\n  }\n\n  // Split based on the second occurrence of \"1.\"\n  let firstIndex = quizData.choices[0].message.content.indexOf('1.');\n  let secondIndex = quizData.choices[0].message.content.indexOf('1.', firstIndex + 1);\n\n  if (secondIndex === -1) {\n    console.error('Unexpected data format');\n    return;\n  }\n\n  const contentAfterSolutions = quizData.choices[0].message.content.substring(secondIndex);\n  const answers = contentAfterSolutions.split('\\n');\n\n  answers.forEach((answer, index) => {\n    let formattedAnswer = answer.replace(/^\\d+\\.\\s*/, '');\n    let inputElement = document.getElementById(`input-${index}`);\n    let userInput = inputElement ? inputElement.value : null;\n\n    if (userInput === formattedAnswer) {\n      newFeedback[index] = \"correct\";\n    } else {\n      newFeedback[index] = \"wrong\";\n    }\n  });\n\n  setFeedback(newFeedback);\n};\n\n\n\nconst formatQuestions = (data) => {\n  let renderedQuestions = [];\n\n  if (data && data.choices && data.choices[0] && data.choices[0].message) {\n    let content = data.choices[0].message.content;\n\n    // Start from the first occurrence of \"1.\"\n    const startIndex = content.indexOf('1.');\n    if (startIndex > -1) {\n      content = content.substring(startIndex);\n    }\n\n    const questionAnswerPairs = content.split('\\n');\n    \n    questionAnswerPairs.forEach((pair, index) => {\n      // Extract the question and answer from the pair using the updated regex pattern\n      let match = pattern.match(pair);\n      if (!match) return;\n\n      let [_, questionNumber, questionContent, answer] = match.groups();\n\n      let feedbackElement = null;\n      if (feedback[index]) {\n        feedbackElement = <span className={`feedback ${feedback[index]}`}>{feedback[index]}</span>;\n      }\n\n      let answerText = null;\n      if (showAnswers) {\n        answerText = <span>({answer})</span>;\n      }\n\n      renderedQuestions.push(\n        <p key={index}>\n          {questionNumber} {questionContent} \n          <input id={`input-${index}`} placeholder={answer} /> \n          {answerText} {feedbackElement}\n        </p>\n      );\n    });\n  }\n\n  return renderedQuestions;\n};\n\n\n\n\n\n  const selectQuizType = (type) => {\n    setQuizType(type);\n  };\n\nreturn (\n    <div>\n      {/* Selector buttons for quiz type */}\n      <div className=\"quiz-selector\">\n        <button \n            className={quizType === 'Subjunctive' ? 'selected-quiz' : ''} \n            onClick={() => selectQuizType('Subjunctive')}\n        >\n            Subjunctive\n        </button>\n        <button \n            className={quizType === 'Basic Conjugation' ? 'selected-quiz' : ''} \n            onClick={() => selectQuizType('Basic Conjugation')}\n        >\n            Basic Conjugation\n        </button>\n        {/* New button for Imperative */}\n        <button \n            className={quizType === 'Imperative' ? 'selected-quiz' : ''} \n            onClick={() => selectQuizType('Imperative')}\n        >\n            Imperative\n        </button>\n      </div>\n\n      <button onClick={generateNewQuiz}>Generate New Quiz</button>\n      <button onClick={checkAnswers}>Check</button>\n      <button onClick={() => setShowAnswers(!showAnswers)}>Show Answers</button>\n\n      {formatQuestions(quizData)}\n <div id=\"output\"></div>\n      {loading && <p>Loading...</p>}\n           {/* Display API Response for Debugging */}\n      {quizData && (\n        <pre>{JSON.stringify(quizData, null, 2)}</pre>\n      )}\n    </div>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}